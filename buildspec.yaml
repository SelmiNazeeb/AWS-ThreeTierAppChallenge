version: 0.2

env:
  variables:
    CLUSTER_NAME: three-tier-cluster
    REGION: us-east-1
    ACCOUNT_ID: 390403857216
    FRONTEND_REPO: frontend
    BACKEND_REPO: backend

phases:
  pre_build:
    commands:
      - echo Logging into Amazon ECR...
      - aws ecr get-login-password --region $REGION | docker login --username AWS --password-stdin $ACCOUNT_ID.dkr.ecr.$REGION.amazonaws.com
      - echo Updating kubeconfig...
      - aws eks update-kubeconfig --name $CLUSTER_NAME --region $REGION
      - export IMAGE_TAG=v1.$CODEBUILD_BUILD_NUMBER

  build:
    commands:
      - echo Building frontend image...
      - docker build -t $FRONTEND_REPO:$IMAGE_TAG Application-Code/frontend
      - docker tag $FRONTEND_REPO:$IMAGE_TAG $ACCOUNT_ID.dkr.ecr.$REGION.amazonaws.com/$FRONTEND_REPO:$IMAGE_TAG

      - echo Building backend image...
      - docker build -t $BACKEND_REPO:$IMAGE_TAG Application-Code/backend
      - docker tag $BACKEND_REPO:$IMAGE_TAG $ACCOUNT_ID.dkr.ecr.$REGION.amazonaws.com/$BACKEND_REPO:$IMAGE_TAG

  post_build:
    commands:
      - echo Pushing images to ECR...
      - docker push $ACCOUNT_ID.dkr.ecr.$REGION.amazonaws.com/$FRONTEND_REPO:$IMAGE_TAG
      - docker push $ACCOUNT_ID.dkr.ecr.$REGION.amazonaws.com/$BACKEND_REPO:$IMAGE_TAG

      - echo Deploying manifests to EKS...
      - aws eks update-kubeconfig --name $CLUSTER_NAME --region $REGION

      # Deploy Database manifests
      - kubectl apply -f Kubernetes-Manifests-file/Database/

      # Deploy Backend manifests
      - kubectl apply -f Kubernetes-Manifests-file/Backend/deployment.yaml
      - kubectl apply -f Kubernetes-Manifests-file/Backend/service.yaml

      # Deploy Frontend manifests
      - kubectl apply -f Kubernetes-Manifests-file/Frontend/deployment.yaml
      - kubectl apply -f Kubernetes-Manifests-file/Frontend/service.yaml

      # Deploy Ingress manifest
      - kubectl apply -f Kubernetes-Manifests-file/ingress.yaml

artifacts:
  files:
    - '**/*'
